// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model Pekerjaan dengan pemetaan yang benar
model Pekerjaan {
  id            Int           @id @default(autoincrement()) @map("id_pekerjaan")
  namapekerjaan String
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  subkriteria   Subkriteria[]

  @@map("pekerjaan")
}

// Model Kriteria
model Kriteria {
  id           Int           @id @default(autoincrement()) @map("id_kriteria")
  namakriteria String
  bobot        Float
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  subkriteria  Subkriteria[]

  @@map("kriteria")
}

// Model Subkriteria
model Subkriteria {
  id              Int           @id @default(autoincrement()) @map("id_subkriteria")
  namasubkriteria String
  namakriteria    String
  nilaitarget     Float
  status          String        @default("active")
  id_pekerjaan    Int
  id_kriteria     Int
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  pekerjaan       Pekerjaan     @relation(fields: [id_pekerjaan], references: [id])
  kriteria        Kriteria      @relation(fields: [id_kriteria], references: [id])
  perhitungan     Perhitungan[]

  @@unique([id_pekerjaan, id_kriteria])
  @@index([id_pekerjaan], name: "idx_subkriteria_pekerjaan")
  @@index([id_kriteria], name: "idx_subkriteria_kriteria")
  @@map("subkriteria")
}

// Model Pelamar
model Pelamar {
  id          Int          @id @default(autoincrement()) @map("id_pelamar")
  namapelamar String
  nopelamar   String
  email       String       @unique
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  perhitungan Perhitungan[]
  ranking     Ranking[]

  @@map("pelamar")
}

// Model Perhitungan
model Perhitungan {
  id              Int         @id @default(autoincrement()) @map("id_perhitungan")
  id_pelamar      Int
  id_subkriteria  Int
  target          Float
  gap             Float
  ncf             Float
  nsf             Float
  total           Float
  periode         String
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")
  pelamar         Pelamar     @relation(fields: [id_pelamar], references: [id])
  subkriteria     Subkriteria @relation(fields: [id_subkriteria], references: [id])

  @@unique([id_pelamar, id_subkriteria, periode])
  @@index([id_pelamar], name: "idx_perhitungan_pelamar")
  @@index([id_subkriteria], name: "idx_perhitungan_subkriteria")
  @@index([periode], name: "idx_perhitungan_periode")
  @@map("perhitungan")
}

// Model Ranking
model Ranking {
  id          Int      @id @default(autoincrement()) @map("id_ranking")
  id_pelamar  Int
  nilaiakhir  Float
  rank        Int
  periode     String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  pelamar     Pelamar  @relation(fields: [id_pelamar], references: [id])

  @@unique([id_pelamar, periode])
  @@index([id_pelamar], name: "idx_ranking_pelamar")
  @@index([periode], name: "idx_ranking_periode")
  @@index([rank], name: "idx_ranking_rank")
  @@map("ranking")
}